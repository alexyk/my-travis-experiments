stages:
  - experiments
  - name: stage master
    if: branch = master1
  - name: stage dev
    if: branch = dev1
  - name: other stage
    if: 1 != 1

jobs:
  include:
    - stage: experimpents
      name: No 1 - Set env with replaced string
      env:
        - app_ios=$(tmp=$TRAVIS_BUILD_DIR && tmp=${tmp//\//-} && echo $tmp)
      script:
        - echo $app_ios
    - name: No 2 - Set 'var2' using 'var1' in 'env' section
      env:
        - var1="$TRAVIS_BUILD_DIR - $TRAVIS_BRANCH"
        - var2="123 - $var1"
      script:
        - echo "var1 = $var1"
        - echo "var2 = $var2"

    - stage: stage dev
      before_script:
        - mkdir -p out/
        - ls -lahtR
      script: echo Stage 1 - Job 1
      cache:
        - directories:
          - ./out
      after_script:
        - echo $(date) > stage1_job1
        - ls -lRaht
    - before_script: ls -l
      script: echo Stage 1 - Job 2
      after_script: 
        - echo $(date) > stage1_job2
        - ls -lRaht

    - stage: other stage
      env:
        - env1=$(date)
        - env2=100
      cache:
        - directories:
          - ./out
      before_script:
        - ls -lahtR
      script: echo Stage 2 - Job 1
      after_script:
        - "var1='hello there'"
        - echo $(date) > out/stage2_job1
        - echo $env1 >> out/stage2_job1
        - "echo \"Var1: $var1\""
        - "var1=123"
        - "echo \"Var1: $var1 (take 2)\""
        - echo $env2 >> out/stage2_job1
        - ls -lRaht
        - cat out/stage2_job1
  
    - stage: stage master
      cache:
        - directories:
          - ./out
      before_script:
        - ls -lahtR
      script: echo Stage 3 - Job 1
      after_script:
        - echo $(date) > out/stage3_job1
        - ls -lRaht
    